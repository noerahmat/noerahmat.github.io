# #file system scan
# echo "pra Build............."
# #build and test
# echo "Build and Test............."
# #registry scan
# echo "post Build............."
# -----------------------------------------------------------------------------------
eval "$(jq -r '. | to_entries | .[] | .key + "=\"" + .value + "\""' < cicd/cicd.json)"
REPO=$(basename -s .git `git config --get remote.origin.url`)
BRANCH=$(git rev-parse --abbrev-ref HEAD)
LATEST_COMMIT=$(git rev-parse --short HEAD)
REGISTRY="loyaltolpi"
REGISTRY01="registry01.loyalto.id"

if [ "${BRANCH}" = "production" ]
then
    LATEST_TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
    TAG=${LATEST_TAG}
else
    TAG=${LATEST_COMMIT}
fi


if [ "${BRANCH}" = "develop-sandbox" ]
then
  CLUSTER="develop-qoin"
  NAMESPACE="develop-sandbox"
elif [ "${BRANCH}" = "staging-sandbox" ]
then
  CLUSTER="staging-qoin"
  NAMESPACE="staging-sandbox"
elif [ "${BRANCH}" = "sandbox"  ]
then
  CLUSTER="sandbox-qoin"
  NAMESPACE="sandbox-qoin"
fi
# -----------------------------------------------------------------------------------


builder_step(){

    # docker pull ${REGISTRY01}/${IMAGE}:builder 2>/dev/null || \
    echo "=======================================";
    echo "BUILDER";
    echo "=======================================";
    time docker build --build-arg BRANCH=${BRANCH} --build-arg PROJECT=${IMAGE} --build-arg PORT=${PORT} -t ${REGISTRY01}/${IMAGE}:builder -f builder.Dockerfile . | tee .${REGISTRY01}-${IMAGE}-builder_result.log

    echo "BUILD ====>>> ${REGISTRY01}/${IMAGE}:builder ===>>>"
    RESULT=$(cat .${REGISTRY01}-${IMAGE}-builder_result.log | tail -n 1)
    if [[ "$RESULT" != *Successfully* ]];
    then
    echo "!!!!FAIL"
      exit -1
    fi

echo "pwlpi123" | docker login registry01.loyalto.id --username mamat --password-stdin
time docker push ${REGISTRY01}/${IMAGE}:builder
# if [[ "$(is_logged_in_registry01)" == "true" ]]; then
#   echo "sudah login"
#     time docker push ${REGISTRY01}/${IMAGE}:builder
# fi


}


# build
build_step(){

echo "=======================================";
echo " ⛏️  BUILD ...........................";
echo "=======================================";
time docker build --build-arg REGISTRY01=${REGISTRY01} --build-arg BRANCH=${BRANCH} --build-arg PROJECT=${IMAGE} --build-arg PORT=${PORT} -t ${REGISTRY}/${IMAGE}:${TAG} -f Dockerfile . | tee .${REGISTRY}-${IMAGE}-${TAG}_result.log

RESULT=$(cat .${REGISTRY}-${IMAGE}-${TAG}_result.log | tail -n 1)
if [[ "$RESULT" != *Successfully* ]];
then
echo "!!!!FAIL"
  exit -1
else
echo " ✔️  BUILD IS DONE ====>>> ${REGISTRY}/${IMAGE}:${TAG} ===>>>"
fi

}

scan(){

    echo "=======================================";
    echo " SCAN IMAGE VULNERABILILTY ..........................";
    echo "=======================================";
    trivy image --exit-code 0 --no-progress --format template --template "@/html.tpl" -o cicd/index.html ${REGISTRY}/${IMAGE}:${TAG}

}
# ===============================================================
    if [ -f "builder.Dockerfile" ]; then
        # echo "builder.Dockerfile exists."
        docker pull ${REGISTRY01}/${IMAGE}:builder
        if [[ "$(docker images -q ${REGISTRY01}/${IMAGE}:builder 2> /dev/null)" == "" ]]; then
        builder_step
        fi
        build_step
        scan
    else 
        # echo "builder.Dockerfile does not exist."
        build_step
        scan
    fi